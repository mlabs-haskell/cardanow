version: "3.9"

services:
  cardano-node:
    image: inputoutput/cardano-node:8.1.2
    networks:
      - internal-network
    volumes:
      - cardano-node-data:/data
      - cardano-node-ipc:/ipc
      - ./mithril-snapshot:/data/db
      - ./configurations/cardano-configurations/network/${NETWORK}:/config
    environment:
      - CARDANO_NODE_SOCKET_PATH=/ipc/node.socket # used by cardano-cli
    restart: on-failure
    healthcheck:
      # Ping the EKG port to see if it responds.
      # Assuming if EKG isn't up then the rest of cardano-node isn't either.
      test: ["CMD-SHELL", "curl -f 127.0.0.1:12788 || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 5
    command:
      - "run"
      - "--config"
      - "/config/cardano-node/config.json"
      - "--topology"
      - "/config/cardano-node/topology.json"
      - "--database-path"
      - "/data/db"
      - "--socket-path"
      - "/ipc/node.socket"

  kupo:
    image: cardanosolutions/kupo:v2.7.0
    depends_on:
      cardano-node:
        condition: service_healthy
    restart: on-failure
    volumes:
      - ./kupo-data:/db
      - cardano-node-ipc:/ipc
      - ./configurations/cardano-configurations/network/${NETWORK}:/config
    ports:
      - "1442:1442"
    command:
      - "--node-socket"
      - "/ipc/node.socket"
      - "--node-config"
      - "/config/cardano-node/config.json"
      - "--defer-db-indexes"
      - "--host"
      - "0.0.0.0"
      - "--workdir"
      - "db"
      - "--since"
      - "origin"
      - "--match"
      - "*"

  postgres:
    image: postgres:11.18-alpine
    environment:
      - POSTGRES_LOGGING=true
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: on-failure
    healthcheck:
      # Use pg_isready to check postgres is running. Substitute different
      # user `postgres` if you've setup differently to config/pgpass-mainnet
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    command:
      - "-c"
      - "maintenance_work_mem=1GB"
      - "-c"
      - "max_parallel_maintenance_workers=4"

  cardano-db-sync:
    image: inputoutput/cardano-db-sync:13.1.0.2
    environment:
      - NETWORK=${NETWORK}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - RESTORE_RECREATE_DB=N
      - DISABLE_LEDGER=N
    depends_on:
      cardano-node:
        condition: service_healthy
      postgres:
        condition: service_healthy
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
    volumes:
      - ./db-sync-data:/var/lib/cexplorer
      - cardano-node-ipc:/node-ipc
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

secrets:
  postgres_db:
    file: ./configurations/postgres/secrets/db
  postgres_password:
    file: ./configurations/postgres/secrets/password
  postgres_user:
    file: ./configurations/postgres/secrets/user

volumes:
  cardano-node-ipc:
  cardano-node-data:
  postgres:

networks:
  internal-network:
    internal: true
